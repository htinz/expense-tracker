{"ast":null,"code":"var _jsxFileName = \"/Users/htinzaw/Desktop/untitled folder/expense-tracker/src/components/ExpenseDate/ExpenseDate.js\";\nimport React from \"react\";\nimport \"./ExpenseDate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseDate = props => {\n  // assign varialbles to set up date objects (day, month and year)\n  // use \"long\" to get long full name for example: \"Janaury\"\n  const month = props.date.toLocaleString(\"en-US\", {\n    month: \"long\"\n  }); // use \"2-digit\" for day\n\n  const day = props.date.toLocaleString(\"en-US\", {\n    day: \"2-digit\"\n  }); // use getFullYear() build-in method to get full year\n\n  const year = props.date.getFullYear();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-date\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__month\",\n      children: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__year\",\n      children: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__day\",\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpenseDate;\nexport default ExpenseDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseDate\");","map":{"version":3,"names":["React","ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear"],"sources":["/Users/htinzaw/Desktop/untitled folder/expense-tracker/src/components/ExpenseDate/ExpenseDate.js"],"sourcesContent":["import React from \"react\";\n\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  // assign varialbles to set up date objects (day, month and year)\n  // use \"long\" to get long full name for example: \"Janaury\"\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  // use \"2-digit\" for day\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  // use getFullYear() build-in method to get full year\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      {/* pointing varaibles using curly braces */}\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAC7B;EACA;EACA,MAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;IAAEF,KAAK,EAAE;EAAT,CAAnC,CAAd,CAH6B,CAI7B;;EACA,MAAMG,GAAG,GAAGJ,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;IAAEC,GAAG,EAAE;EAAP,CAAnC,CAAZ,CAL6B,CAM7B;;EACA,MAAMC,IAAI,GAAGL,KAAK,CAACE,IAAN,CAAWI,WAAX,EAAb;EAEA,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA,wBAEE;MAAK,SAAS,EAAC,qBAAf;MAAA,UAAsCL;IAAtC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAC,oBAAf;MAAA,UAAqCI;IAArC;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAK,SAAS,EAAC,mBAAf;MAAA,UAAoCD;IAApC;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAjBD;;KAAML,W;AAmBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}